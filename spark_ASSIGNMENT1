a. Read the data, show it and Count the number of records.
>>> df.show(5)                                                                  
+--------+--------+------------+-----+--------------------+---------+---------+----------+
| case_id|province|        city|group|      infection_case|confirmed| latitude| longitude|
+--------+--------+------------+-----+--------------------+---------+---------+----------+
| 1000001|   Seoul|  Yongsan-gu| true|       Itaewon Clubs|      139|37.538621|126.992652|
| 1000002|   Seoul|   Gwanak-gu| true|             Richway|      119| 37.48208|126.901384|
| 1000003|   Seoul|     Guro-gu| true| Guro-gu Call Center|       95|37.508163|126.884387|
| 1000004|   Seoul|Yangcheon-gu| true|Yangcheon Table T...|       43|37.546061|126.874209|
| 1000005|   Seoul|   Dobong-gu| true|     Day Care Center|       43|37.679422|127.044374|
+--------+--------+------------+-----+--------------------+---------+---------+----------+
only showing top 5 rows

>>> df.count()
174

b. Describe the data with a describe function.
>>> df.describe()
DataFrame[summary: string,  case_id: string, province: string, city: string, infection_case: string, confirmed: string, latitude: string, longitude: string]

c. If there is any duplicate value drop it.
>>> drop=df.dropDuplicates()
>>> drop.show()
+--------+-----------------+---------------+-----+--------------------+---------+----------+-----------+
| case_id|         province|           city|group|      infection_case|confirmed|  latitude|  longitude|
+--------+-----------------+---------------+-----+--------------------+---------+----------+-----------+
| 1500007|          Daejeon|from other city| true|Seosan-si Laboratory|        2|         -|          -|
| 1500004|          Daejeon|         Seo-gu| true|     Dreaming Church|        4| 36.346869| 127.368594|
| 3000002|       Gangwon-do|from other city| true|Uijeongbu St. Mar...|       10|         -|          -|
| 1000023|            Seoul|        Jung-gu| true|   KB Life Insurance|       13| 37.560899| 126.966998|
| 1100007|            Busan|from other city| true|Cheongdo Daenam H...|        1|         -|          -|
| 4100002|Chungcheongnam-do|from other city| true|Door-to-door sale...|       10|         -|          -|
| 5000002|     Jeollabuk-do|from other city| true|Door-to-door sale...|        3|         -|          -|
| 1000010|            Seoul|      Gwanak-gu| true|     Wangsung Church|       30| 37.481735| 126.930121|
| 1000030|            Seoul|     Gangseo-gu| true|SJ Investment Cal...|        0| 37.559649| 126.835102|
| 1200008|            Daegu|              -|false|     overseas inflow|       41|         -|          -|
| 1300005|          Gwangju|              -|false|                 etc|        1|         -|          -|

d. Use limit function for showcasing a limited number of records.
>>> d=df.limit(5)
>>> d.show()
+--------+--------+------------+-----+--------------------+---------+---------+----------+
| case_id|province|        city|group|      infection_case|confirmed| latitude| longitude|
+--------+--------+------------+-----+--------------------+---------+---------+----------+
| 1000001|   Seoul|  Yongsan-gu| true|       Itaewon Clubs|      139|37.538621|126.992652|
| 1000002|   Seoul|   Gwanak-gu| true|             Richway|      119| 37.48208|126.901384|
| 1000003|   Seoul|     Guro-gu| true| Guro-gu Call Center|       95|37.508163|126.884387|
| 1000004|   Seoul|Yangcheon-gu| true|Yangcheon Table T...|       43|37.546061|126.874209|
| 1000005|   Seoul|   Dobong-gu| true|     Day Care Center|       43|37.679422|127.044374|
+--------+--------+------------+-----+--------------------+---------+---------+----------+

e. If you find the column name is not suitable, change the column name.[optional]

>>> df.withColumnRenamed("infection_case","infection_case_detected_at").show(5)
+--------+--------+------------+-----+--------------------------+---------+---------+----------+
| case_id|province|        city|group|infection_case_detected_at|confirmed| latitude| longitude|
+--------+--------+------------+-----+--------------------------+---------+---------+----------+
| 1000001|   Seoul|  Yongsan-gu| true|             Itaewon Clubs|      139|37.538621|126.992652|
| 1000002|   Seoul|   Gwanak-gu| true|                   Richway|      119| 37.48208|126.901384|
| 1000003|   Seoul|     Guro-gu| true|       Guro-gu Call Center|       95|37.508163|126.884387|
| 1000004|   Seoul|Yangcheon-gu| true|      Yangcheon Table T...|       43|37.546061|126.874209|
| 1000005|   Seoul|   Dobong-gu| true|           Day Care Center|       43|37.679422|127.044374|
+--------+--------+------------+-----+--------------------------+---------+---------+----------+
only showing top 5 rows

g. If there is any null value, fill it with any random value or drop it.
>>> df.withColumn("latitude",when(col("latitude")=='-',"null").otherwise(col("latitude"))).withColumn("longitude",when(col("longitude")=='-',"null").otherwise(col("longitude"))).show()
+--------+--------+---------------+-----+--------------------+---------+---------+----------+
| case_id|province|           city|group|      infection_case|confirmed| latitude| longitude|
+--------+--------+---------------+-----+--------------------+---------+---------+----------+
| 1000001|   Seoul|     Yongsan-gu| true|       Itaewon Clubs|      139|37.538621|126.992652|
| 1000002|   Seoul|      Gwanak-gu| true|             Richway|      119| 37.48208|126.901384|
| 1000003|   Seoul|        Guro-gu| true| Guro-gu Call Center|       95|37.508163|126.884387|
| 1000004|   Seoul|   Yangcheon-gu| true|Yangcheon Table T...|       43|37.546061|126.874209|
| 1000005|   Seoul|      Dobong-gu| true|     Day Care Center|       43|37.679422|127.044374|
| 1000006|   Seoul|        Guro-gu| true|Manmin Central Ch...|       41|37.481059|126.894343|
| 1000007|   Seoul|from other city| true|SMR Newly Planted...|       36|     null|      null|
| 1000008|   Seoul|  Dongdaemun-gu| true|       Dongan Church|       17|37.592888|127.056766|
| 1000009|   Seoul|from other city| true|Coupang Logistics...|       25|     null|      null|
| 1000010|   Seoul|      Gwanak-gu| true|     Wangsung Church|       30|37.481735|126.930121|
| 1000011|   Seoul|   Eunpyeong-gu| true|Eunpyeong St. Mar...|       14| 37.63369|  126.9165|
| 1000012|   Seoul|   Seongdong-gu| true|    Seongdong-gu APT|       13| 37.55713|  127.0403|
| 1000013|   Seoul|      Jongno-gu| true|Jongno Community ...|       10| 37.57681|   127.006|
| 1000014|   Seoul|     Gangnam-gu| true|Samsung Medical C...|        7| 37.48825| 127.08559|
| 1000015|   Seoul|        Jung-gu| true|Jung-gu Fashion C...|        7|37.562405|126.984377|
| 1000016|   Seoul|   Seodaemun-gu| true|  Yeonana News Class|        5|37.558147|126.943799|
| 1000017|   Seoul|      Jongno-gu| true|Korea Campus Crus...|        7|37.594782|126.968022|
| 1000018|   Seoul|     Gangnam-gu| true|Gangnam Yeoksam-d...|        6|     null|      null|
| 1000019|   Seoul|from other city| true|Daejeon door-to-d...|        1|     null|      null|
| 1000020|   Seoul|   Geumcheon-gu| true|Geumcheon-gu rice...|        6|     null|      null|
+--------+--------+---------------+-----+--------------------+---------+---------+----------+
only showing top 20 rows


h. Filter the data based on different columns or variables and do the best analysis.
>>> filtered_df = df.filter((col("confirmed") > 100) & (col("city")=="Yongsan-gu"))
>>> filtered_df.show()
+--------+--------+----------+-----+--------------+---------+---------+----------+
| case_id|province|      city|group|infection_case|confirmed| latitude| longitude|
+--------+--------+----------+-----+--------------+---------+---------+----------+
| 1000001|   Seoul|Yongsan-gu| true| Itaewon Clubs|      139|37.538621|126.992652|
+--------+--------+----------+-----+--------------+---------+---------+----------+

i. Sort the number of confirmed cases. Confirmed column is there in the dataset. Check with descending sort also.

>>> sorted_df=df.orderBy(col("confirmed").desc())
>>> sorted_df.show()
+--------+-----------------+---------------+-----+--------------------+---------+---------+----------+
| case_id|         province|           city|group|      infection_case|confirmed| latitude| longitude|
+--------+-----------------+---------------+-----+--------------------+---------+---------+----------+
| 1200001|            Daegu|         Nam-gu| true|  Shincheonji Church|     4511| 35.84008|  128.5667|
| 1200009|            Daegu|              -|false|contact with patient|      917|        -|         -|
| 1200010|            Daegu|              -|false|                 etc|      747|        -|         -|
| 6000001| Gyeongsangbuk-do|from other city| true|  Shincheonji Church|      566|        -|         -|
| 2000020|      Gyeonggi-do|              -|false|     overseas inflow|      305|        -|         -|
| 1000036|            Seoul|              -|false|     overseas inflow|      298|        -|         -|
| 1200002|            Daegu|   Dalseong-gun| true|Second Mi-Ju Hosp...|      196|35.857375|128.466651|
| 6000012| Gyeongsangbuk-do|              -|false|contact with patient|      190|        -|         -|
| 1000037|            Seoul|              -|false|contact with patient|      162|        -|         -|
| 1000001|            Seoul|     Yongsan-gu| true|       Itaewon Clubs|      139|37.538621|126.992652|
| 6000013| Gyeongsangbuk-do|              -|false|                 etc|      133|        -|         -|
| 1200003|            Daegu|         Seo-gu| true|Hansarang Convale...|      124|35.885592|128.556649|
| 1000002|            Seoul|      Gwanak-gu| true|             Richway|      119| 37.48208|126.901384|
| 6000002| Gyeongsangbuk-do|   Cheongdo-gun| true|Cheongdo Daenam H...|      119| 35.64887|  128.7368|
| 4100001|Chungcheongnam-do|     Cheonan-si| true|gym facility in C...|      103| 36.81503|  127.1139|
| 1200004|            Daegu|   Dalseong-gun| true|Daesil Convalesce...|      101|35.857393|128.466653|
| 1000038|            Seoul|              -|false|                 etc|      100|        -|         -|
| 1000003|            Seoul|        Guro-gu| true| Guro-gu Call Center|       95|37.508163|126.884387|
| 2000022|      Gyeonggi-do|              -|false|                 etc|       84|        -|         -|
| 1400005|          Incheon|              -|false|     overseas inflow|       68|        -|         -|
+--------+-----------------+---------------+-----+--------------------+---------+---------+----------+
only showing top 20 rows

k. Use group by on top of province and city column and agg it with sum of confirmed cases.
>>> grpby_df=df.groupBy("city")
>>> grpby_df.count().show()
+---------------+-----+
|           city|count|
+---------------+-----+
|     Gangnam-gu|    4|
|     Cheonan-si|    1|
|from other city|   51|
|      Anyang-si|    2|
|      Gwanak-gu|    2|
|     Yongsan-gu|    1|
|        Dong-gu|    2|
|         Sejong|    2|
|     Gangseo-gu|    1|
|       Wonju-si|    1|
|     Suyeong-gu|    1|
|   Geochang-gun|    2|
|  Dongdaemun-gu|    1|
|     Dongnae-gu|    1|
|         Jin-gu|    1|
|     Yangsan-si|    1|
|    Changwon-si|    1|
|         Nam-gu|    1|
|   Gyeongsan-si|    3|
|      Jongno-gu|    2|
+---------------+-----+
only showing top 20 rows
6. Create Spark UDFs
Create function casehighlow()
If case is less than 50 return low else return high

>>> @udf(returnType=StringType())
... def casehighlow(confirmed):
...  if confirmed < 50:
...             return "low"
...  else:
...             return "High"
... 
>>> df.withColumn("HighLow", casehighlow(df["confirmed"])).show()
+--------+--------+---------------+-----+--------------------+---------+---------+----------+-------+
| case_id|province|           city|group|      infection_case|confirmed| latitude| longitude|HighLow|
+--------+--------+---------------+-----+--------------------+---------+---------+----------+-------+
| 1000001|   Seoul|     Yongsan-gu| true|       Itaewon Clubs|      139|37.538621|126.992652|   High|
| 1000002|   Seoul|      Gwanak-gu| true|             Richway|      119| 37.48208|126.901384|   High|
| 1000003|   Seoul|        Guro-gu| true| Guro-gu Call Center|       95|37.508163|126.884387|   High|
| 1000004|   Seoul|   Yangcheon-gu| true|Yangcheon Table T...|       43|37.546061|126.874209|    low|
| 1000005|   Seoul|      Dobong-gu| true|     Day Care Center|       43|37.679422|127.044374|    low|
| 1000006|   Seoul|        Guro-gu| true|Manmin Central Ch...|       41|37.481059|126.894343|    low|
| 1000007|   Seoul|from other city| true|SMR Newly Planted...|       36|        -|         -|    low|
| 1000008|   Seoul|  Dongdaemun-gu| true|       Dongan Church|       17|37.592888|127.056766|    low|
| 1000009|   Seoul|from other city| true|Coupang Logistics...|       25|        -|         -|    low|
| 1000010|   Seoul|      Gwanak-gu| true|     Wangsung Church|       30|37.481735|126.930121|    low|
| 1000011|   Seoul|   Eunpyeong-gu| true|Eunpyeong St. Mar...|       14| 37.63369|  126.9165|    low|
| 1000012|   Seoul|   Seongdong-gu| true|    Seongdong-gu APT|       13| 37.55713|  127.0403|    low|
| 1000013|   Seoul|      Jongno-gu| true|Jongno Community ...|       10| 37.57681|   127.006|    low|
| 1000014|   Seoul|     Gangnam-gu| true|Samsung Medical C...|        7| 37.48825| 127.08559|    low|
| 1000015|   Seoul|        Jung-gu| true|Jung-gu Fashion C...|        7|37.562405|126.984377|    low|
| 1000016|   Seoul|   Seodaemun-gu| true|  Yeonana News Class|        5|37.558147|126.943799|    low|
| 1000017|   Seoul|      Jongno-gu| true|Korea Campus Crus...|        7|37.594782|126.968022|    low|
| 1000018|   Seoul|     Gangnam-gu| true|Gangnam Yeoksam-d...|        6|        -|         -|    low|
| 1000019|   Seoul|from other city| true|Daejeon door-to-d...|        1|        -|         -|    low|
| 1000020|   Seoul|   Geumcheon-gu| true|Geumcheon-gu rice...|        6|        -|         -|    low|
+--------+--------+---------------+-----+--------------------+---------+---------+----------+-------+
only showing top 20 rows














